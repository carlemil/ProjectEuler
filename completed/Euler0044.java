package completed;

import java.util.HashSet;

import com.kjellstrand.euler.Tools;

//Pentagonal numbers are generated by the formula, Pn=n(3n1)/2. The first 
//ten pentagonal numbers are:
//
//1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
//
//It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 
//70  22 = 48, is not pentagonal.
//
//Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
//difference is pentagonal and D = |Pk  Pj| is minimised; what is the 
//value of D?

public class Euler0044 {

    static HashSet<Long> pentagonal = new HashSet<Long>();

    public static void main(String[] args) {
        long time = System.currentTimeMillis();

        int k = 1;
        int j = 0;
        for(int i = 1; i < 4000; i++) {
            pentagonal.add(Tools.getPentagonal(i));
        }

        while (k != 0) {
            k++;
            long pk = Tools.getPentagonal(k);
            j = 1;
            while (j < k) {
                long pj = Tools.getPentagonal(j);
                j++;

                if (pentagonal.contains(pj + pk) && pentagonal.contains(Math.abs(pj - pk))) {
                    System.out.println(Math.abs(pj - pk));
                    k = 0;
                    break;
                }
            }
        }

        System.out.println("time: " + (System.currentTimeMillis() - time) + "ms");
    }
}
